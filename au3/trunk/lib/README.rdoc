-- Encoding: UTF-8 ++
=au3
<tt>.au3</tt> is the usual file extension for {AutoIt version 3}[http://www.autoitscript.com/autoit3/index.shtml] 
scripts. That this library uses it as its name, tells a lot about 
its features. Basically, the +au3+ library can do everything 
you can do with the <tt>.au3</tt> files: 
* Automate the mouse
* Automate the keyboard
* Manipulate Windows
* etc. 
However, there a a few exceptions, since +au3+ doesn't use 
the AutoIt v3 interpreter behind the scenes. Instead, +au3+ is wrapped 
around the DLL interface of AutoIt3, known as AutoItX3. 
==DLL problems: So to use this
As said, au3 is wrapped around AutoItX3. To get au3 working, you have 
to have the file "AutoItX3.dll" somewhere in your PATH. The simplest way 
to get this is just to download AutoIt from http://www.autoitscript.com 
and copy the AutoItX3.dll file (I don't guarantee for the 64-bit version) 
from the AutoItX subdirectory into the directory your script resides in. 
Or, if you don't want to copy the file over and over again, put it in your Ruby's 
bin directory. If you want to deploy your program, the final recipient need not 
to have AutoIt installed - it's enough if you just include the AutoItX3.dll in your 
application (and make sure you've read the AutoItX3 license - it's quite short). 
==Win32API problems:
You may get an error message similar to this after requiring 'au3':
  C:/Ruby19/lib/ruby/gems/1.9.1/gems/win32-api-1.4.6-x86-mingw32/lib/win32/api.so: [BUG] Segmentation fault
This is a bug in the newest version of Win32API. To fix this, simply install an
older version of the Win32API gem:
  gem install win32-api -v 1.4.5
  gem install au3 # The au3 gem will need to be reinstalled
==Usage
The majority of +au3+'s methods is bundled in the AutoItX3 module 
and accessable via it's module methods. In order to get them, 
just require +au3+: 
  require "au3"
  
  AutoItX3.move_mouse(100, 100)
The window-related methods are put together in the 
AutoItX3::Window class. That allows you to create 
Rubyish Window objects rather than using the procedural 
function interface of AutoItX3. You needn't have to require them 
extra. 
  require "au3"
  
  window = AutoItX3::Window.new("au3") #The beginning of a window's title is enough
  window.close
Version 3 of AutoIt is known for its capabilities of direct 
interaction with a window's controls. You will find this methods 
wrapped in the AutoItX3::Control class. 
  require "au3"
  
  #Run notepad
  AutoItX3.run("notepad.exe")
  #Wait for the window to exist
  AutoItX3::Window.wait("Un") #The start of the title is enough to find it
  #Get a reference to it
  window = AutoItX3::Window.new("Un")
  #Bring it to the front
  window.activate
  #Get the text control
  edit = window.focused_control
  #Set the text. You should also have a look on the AutoItX3.send_keys method.
  edit.text = "ABCDEFG"
===Don't know where to start?
Have a look at the documentation of the AutoItX3 module. 
+au3+ is well documented and even if you don't find something 
useful, you may just want to play around with it. ;-)
==Copyright
  Copyright © 2009, 2010 Marvin Gülker, Steven Heidel
  
  Contact: 
  Marvin Gülker (Quintus): sutniuq@@gmx@net
  Steven Heidel (stevenheidel): steven@@livingskyweb@ca
  
  Licensed under the same terms as Ruby (see http://www.ruby-lang.org/en/LICENSE.txt )
    Initia in potestate nostra sunt, de eventu fortuna iudicat. 
==License
    This program is free software: you can redistribute it and/or modify
    it under the terms of Ruby's license. 

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See 
    Ruby's license for more details. 